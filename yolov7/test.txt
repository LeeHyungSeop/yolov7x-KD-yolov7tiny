YOLOR ðŸš€ 53435ed torch 2.4.0 CUDA:0 (NVIDIA GeForce RTX 3060, 12287.5MB)

Namespace(weights='yolo7.pt', cfg='', teacher_weights='/home/hslee/YOLOv7_KD/yolov7/runs/train/coco_v7x_person_10000_finetuning/weights/best.pt', student_weights='yolov7-tiny.pt', teacher_cfg='cfg/training/yolov7x.yaml', student_cfg='cfg/training/yolov7-tiny.yaml', data='../dataset/data.yaml', hyp='data/hyp.scratch.p5.yaml', epochs=100, batch_size=4, img_size=[640, 640], rect=False, resume=False, nosave=False, notest=False, noautoanchor=False, evolve=False, bucket='', cache_images=False, image_weights=False, device='0', multi_scale=False, single_cls=False, adam=False, sync_bn=False, local_rank=-1, workers=4, project='runs/train', entity=None, name='exp', exist_ok=False, quad=False, linear_lr=False, label_smoothing=0.0, upload_dataset=False, bbox_interval=-1, save_period=-1, artifact_alias='latest', freeze=[0], v5_metric=False, world_size=1, global_rank=-1, save_dir='runs/train/exp', total_batch_size=4)
[34m[1mtensorboard: [0mStart with 'tensorboard --logdir runs/train', view at http://localhost:6006/
[34m[1mhyperparameters: [0mlr0=0.01, lrf=0.1, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.3, cls_pw=1.0, obj=0.7, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.2, scale=0.9, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.15, copy_paste=0.0, paste_in=0.15, loss_ota=1
/home/hslee/YOLOv7_KD/yolov7/train.py:85: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  student_run_id = torch.load(student_weights, map_location=device).get('wandb_id') if student_weights.endswith('.pt') and os.path.isfile(student_weights) else None
/home/hslee/YOLOv7_KD/yolov7/train.py:107: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(teacher_weights, map_location=device)  # load checkpoint
Overriding model.yaml nc=80 with nc=1

                 from  n    params  module                                  arguments                     
  0                -1  1      1160  models.common.Conv                      [3, 40, 3, 1]                 
  1                -1  1     28960  models.common.Conv                      [40, 80, 3, 2]                
  2                -1  1     57760  models.common.Conv                      [80, 80, 3, 1]                
  3                -1  1    115520  models.common.Conv                      [80, 160, 3, 2]               
  4                -1  1     10368  models.common.Conv                      [160, 64, 1, 1]               
  5                -2  1     10368  models.common.Conv                      [160, 64, 1, 1]               
  6                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                
  7                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                
  8                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                
  9                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                
 10                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                
 11                -1  1     36992  models.common.Conv                      [64, 64, 3, 1]                
 12[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
 13                -1  1    103040  models.common.Conv                      [320, 320, 1, 1]              
 14                -1  1         0  models.common.MP                        []                            
 15                -1  1     51520  models.common.Conv                      [320, 160, 1, 1]              
 16                -3  1     51520  models.common.Conv                      [320, 160, 1, 1]              
 17                -1  1    230720  models.common.Conv                      [160, 160, 3, 2]              
 18          [-1, -3]  1         0  models.common.Concat                    [1]                           
 19                -1  1     41216  models.common.Conv                      [320, 128, 1, 1]              
 20                -2  1     41216  models.common.Conv                      [320, 128, 1, 1]              
 21                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 22                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 23                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 24                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 25                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 26                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 27[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
 28                -1  1    410880  models.common.Conv                      [640, 640, 1, 1]              
 29                -1  1         0  models.common.MP                        []                            
 30                -1  1    205440  models.common.Conv                      [640, 320, 1, 1]              
 31                -3  1    205440  models.common.Conv                      [640, 320, 1, 1]              
 32                -1  1    922240  models.common.Conv                      [320, 320, 3, 2]              
 33          [-1, -3]  1         0  models.common.Concat                    [1]                           
 34                -1  1    164352  models.common.Conv                      [640, 256, 1, 1]              
 35                -2  1    164352  models.common.Conv                      [640, 256, 1, 1]              
 36                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 37                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 38                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 39                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 40                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 41                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 42[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
 43                -1  1   1640960  models.common.Conv                      [1280, 1280, 1, 1]            
 44                -1  1         0  models.common.MP                        []                            
 45                -1  1    820480  models.common.Conv                      [1280, 640, 1, 1]             
 46                -3  1    820480  models.common.Conv                      [1280, 640, 1, 1]             
 47                -1  1   3687680  models.common.Conv                      [640, 640, 3, 2]              
 48          [-1, -3]  1         0  models.common.Concat                    [1]                           
 49                -1  1    328192  models.common.Conv                      [1280, 256, 1, 1]             
 50                -2  1    328192  models.common.Conv                      [1280, 256, 1, 1]             
 51                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 52                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 53                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 54                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 55                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 56                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 57[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
 58                -1  1   1640960  models.common.Conv                      [1280, 1280, 1, 1]            
 59                -1  1  11887360  models.common.SPPCSPC                   [1280, 640, 1]                
 60                -1  1    205440  models.common.Conv                      [640, 320, 1, 1]              
 61                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          
 62                43  1    410240  models.common.Conv                      [1280, 320, 1, 1]             
 63          [-1, -2]  1         0  models.common.Concat                    [1]                           
 64                -1  1    164352  models.common.Conv                      [640, 256, 1, 1]              
 65                -2  1    164352  models.common.Conv                      [640, 256, 1, 1]              
 66                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 67                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 68                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 69                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 70                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 71                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 72[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
 73                -1  1    410240  models.common.Conv                      [1280, 320, 1, 1]             
 74                -1  1     51520  models.common.Conv                      [320, 160, 1, 1]              
 75                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          
 76                28  1    102720  models.common.Conv                      [640, 160, 1, 1]              
 77          [-1, -2]  1         0  models.common.Concat                    [1]                           
 78                -1  1     41216  models.common.Conv                      [320, 128, 1, 1]              
 79                -2  1     41216  models.common.Conv                      [320, 128, 1, 1]              
 80                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 81                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 82                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 83                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 84                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 85                -1  1    147712  models.common.Conv                      [128, 128, 3, 1]              
 86[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
 87                -1  1    102720  models.common.Conv                      [640, 160, 1, 1]              
 88                -1  1         0  models.common.MP                        []                            
 89                -1  1     25920  models.common.Conv                      [160, 160, 1, 1]              
 90                -3  1     25920  models.common.Conv                      [160, 160, 1, 1]              
 91                -1  1    230720  models.common.Conv                      [160, 160, 3, 2]              
 92      [-1, -3, 73]  1         0  models.common.Concat                    [1]                           
 93                -1  1    164352  models.common.Conv                      [640, 256, 1, 1]              
 94                -2  1    164352  models.common.Conv                      [640, 256, 1, 1]              
 95                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 96                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 97                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 98                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
 99                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
100                -1  1    590336  models.common.Conv                      [256, 256, 3, 1]              
101[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
102                -1  1    410240  models.common.Conv                      [1280, 320, 1, 1]             
103                -1  1         0  models.common.MP                        []                            
104                -1  1    103040  models.common.Conv                      [320, 320, 1, 1]              
105                -3  1    103040  models.common.Conv                      [320, 320, 1, 1]              
106                -1  1    922240  models.common.Conv                      [320, 320, 3, 2]              
107      [-1, -3, 59]  1         0  models.common.Concat                    [1]                           
108                -1  1    656384  models.common.Conv                      [1280, 512, 1, 1]             
109                -2  1    656384  models.common.Conv                      [1280, 512, 1, 1]             
110                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              
111                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              
112                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              
113                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              
114                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              
115                -1  1   2360320  models.common.Conv                      [512, 512, 3, 1]              
116[-1, -3, -5, -7, -8]  1         0  models.common.Concat                    [1]                           
117                -1  1   1639680  models.common.Conv                      [2560, 640, 1, 1]             
118                87  1    461440  models.common.Conv                      [160, 320, 3, 1]              
119               102  1   1844480  models.common.Conv                      [320, 640, 3, 1]              
120               117  1   7375360  models.common.Conv                      [640, 1280, 3, 1]             
121   [118, 119, 120]  1     42668  models.yolo.IDetect                     [1, [[12, 16, 19, 36, 40, 28], [36, 75, 76, 55, 72, 146], [142, 110, 192, 243, 459, 401]], [320, 640, 1280]]
/root/anaconda3/lib/python3.10/site-packages/torch/functional.py:513: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at /opt/conda/conda-bld/pytorch_1720538438429/work/aten/src/ATen/native/TensorShape.cpp:3609.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Model Summary: 467 layers, 70815092 parameters, 70815092 gradients, 188.9 GFLOPS

Transferred 642/644 items from /home/hslee/YOLOv7_KD/yolov7/runs/train/coco_v7x_person_10000_finetuning/weights/best.pt
/home/hslee/YOLOv7_KD/yolov7/train.py:119: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(student_weights, map_location=device)  # load checkpoint
Overriding model.yaml nc=80 with nc=1

                 from  n    params  module                                  arguments                     
  0                -1  1       928  models.common.Conv                      [3, 32, 3, 2, None, 1, LeakyReLU(negative_slope=0.1)]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2, None, 1, LeakyReLU(negative_slope=0.1)]
  2                -1  1      2112  models.common.Conv                      [64, 32, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
  3                -2  1      2112  models.common.Conv                      [64, 32, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
  4                -1  1      9280  models.common.Conv                      [32, 32, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
  5                -1  1      9280  models.common.Conv                      [32, 32, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
  6  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
  7                -1  1      8320  models.common.Conv                      [128, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
  8                -1  1         0  models.common.MP                        []                            
  9                -1  1      4224  models.common.Conv                      [64, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 10                -2  1      4224  models.common.Conv                      [64, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 11                -1  1     36992  models.common.Conv                      [64, 64, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 12                -1  1     36992  models.common.Conv                      [64, 64, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 13  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 15                -1  1         0  models.common.MP                        []                            
 16                -1  1     16640  models.common.Conv                      [128, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 17                -2  1     16640  models.common.Conv                      [128, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 19                -1  1    147712  models.common.Conv                      [128, 128, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 20  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 21                -1  1    131584  models.common.Conv                      [512, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 22                -1  1         0  models.common.MP                        []                            
 23                -1  1     66048  models.common.Conv                      [256, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 24                -2  1     66048  models.common.Conv                      [256, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 25                -1  1    590336  models.common.Conv                      [256, 256, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 26                -1  1    590336  models.common.Conv                      [256, 256, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 27  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 28                -1  1    525312  models.common.Conv                      [1024, 512, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 29                -1  1    131584  models.common.Conv                      [512, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 30                -2  1    131584  models.common.Conv                      [512, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 31                -1  1         0  models.common.SP                        [5]                           
 32                -2  1         0  models.common.SP                        [9]                           
 33                -3  1         0  models.common.SP                        [13]                          
 34  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 35                -1  1    262656  models.common.Conv                      [1024, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 36          [-1, -7]  1         0  models.common.Concat                    [1]                           
 37                -1  1    131584  models.common.Conv                      [512, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 38                -1  1     33024  models.common.Conv                      [256, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 39                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          
 40                21  1     33024  models.common.Conv                      [256, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 41          [-1, -2]  1         0  models.common.Concat                    [1]                           
 42                -1  1     16512  models.common.Conv                      [256, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 43                -2  1     16512  models.common.Conv                      [256, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 44                -1  1     36992  models.common.Conv                      [64, 64, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 45                -1  1     36992  models.common.Conv                      [64, 64, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 46  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 47                -1  1     33024  models.common.Conv                      [256, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 48                -1  1      8320  models.common.Conv                      [128, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 49                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          
 50                14  1      8320  models.common.Conv                      [128, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 51          [-1, -2]  1         0  models.common.Concat                    [1]                           
 52                -1  1      4160  models.common.Conv                      [128, 32, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 53                -2  1      4160  models.common.Conv                      [128, 32, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 54                -1  1      9280  models.common.Conv                      [32, 32, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 55                -1  1      9280  models.common.Conv                      [32, 32, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 56  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 57                -1  1      8320  models.common.Conv                      [128, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 58                -1  1     73984  models.common.Conv                      [64, 128, 3, 2, None, 1, LeakyReLU(negative_slope=0.1)]
 59          [-1, 47]  1         0  models.common.Concat                    [1]                           
 60                -1  1     16512  models.common.Conv                      [256, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 61                -2  1     16512  models.common.Conv                      [256, 64, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 62                -1  1     36992  models.common.Conv                      [64, 64, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 63                -1  1     36992  models.common.Conv                      [64, 64, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 64  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 65                -1  1     33024  models.common.Conv                      [256, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 66                -1  1    295424  models.common.Conv                      [128, 256, 3, 2, None, 1, LeakyReLU(negative_slope=0.1)]
 67          [-1, 37]  1         0  models.common.Concat                    [1]                           
 68                -1  1     65792  models.common.Conv                      [512, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 69                -2  1     65792  models.common.Conv                      [512, 128, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 70                -1  1    147712  models.common.Conv                      [128, 128, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 71                -1  1    147712  models.common.Conv                      [128, 128, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 72  [-1, -2, -3, -4]  1         0  models.common.Concat                    [1]                           
 73                -1  1    131584  models.common.Conv                      [512, 256, 1, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 74                57  1     73984  models.common.Conv                      [64, 128, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 75                65  1    295424  models.common.Conv                      [128, 256, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 76                73  1   1180672  models.common.Conv                      [256, 512, 3, 1, None, 1, LeakyReLU(negative_slope=0.1)]
 77      [74, 75, 76]  1     17132  models.yolo.IDetect                     [1, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model Summary: 263 layers, 6014988 parameters, 6014988 gradients, 13.2 GFLOPS

Transferred 330/344 items from yolov7-tiny.pt
Scaled weight_decay = 0.0005
student_optimizer groups: 58 .bias, 58 conv.weight, 61 other
/home/hslee/YOLOv7_KD/yolov7/utils/datasets.py:394: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  cache, exists = torch.load(cache_path), True  # load
[34m[1mwandb: [0mInstall Weights & Biases for YOLOR logging with 'pip install wandb' (recommended)
teacher(yolov7x) pretrained : True
teacher_cfg : cfg/training/yolov7x.yaml
teacher_weights : /home/hslee/YOLOv7_KD/yolov7/runs/train/coco_v7x_person_10000_finetuning/weights/best.pt
Reversing anchor order
student_cfg : cfg/training/yolov7-tiny.yaml
student_weights : yolov7-tiny.pt
Reversing anchor order
[34m[1mtrain: [0mScanning '../dataset/train.cache' images and labels... 8000 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 8000/8000 [00:00<?, ?it/s][34m[1mtrain: [0mScanning '../dataset/train.cache' images and labels... 8000 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 8000/8000 [00:00<?, ?it/s]
[34m[1mval: [0mScanning '../dataset/val.cache' images and labels... 2000 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2000/2000 [00:00<?, ?it/s][34m[1mval: [0mScanning '../dataset/val.cache' images and labels... 2000 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2000/2000 [00:00<?, ?it/s]
/home/hslee/YOLOv7_KD/yolov7/train.py:332: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = amp.GradScaler(enabled=cuda)
Image sizes 640 train, 640 test
Using 4 dataloader workers
Logging results to runs/train/exp
Starting training for 100 epochs...

     Epoch   gpu_mem       box       obj       cls        kd     total    labels  img_size

[34m[1mautoanchor: [0mAnalyzing anchors... anchors/target = 4.34, Best Possible Recall (BPR) = 0.9980
  0%|          | 0/2000 [00:00<?, ?it/s]/home/hslee/YOLOv7_KD/yolov7/train.py:402: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with amp.autocast(enabled=cuda):
      0/99    0.851Gtensor(0.19293, device='cuda:0')   0.01505         0    0.2209   0.01293        33       640:   0%|          | 0/2000 [00:03<?, ?it/s]      0/99    0.851Gtensor(0.19293, device='cuda:0')   0.01505         0    0.2209   0.01293        33       640:   0%|          | 0/2000 [00:03<?, ?it/s]      0/99    0.851Gtensor(0.19293, device='cuda:0')   0.01505         0    0.2209   0.01293        33       640:   0%|          | 1/2000 [00:03<1:43:34,  3.11s/it]      0/99     1.61Gtensor(0.14281, device='cuda:0')   0.01567         0    0.1706   0.01209        22       640:   0%|          | 1/2000 [00:03<1:43:34,  3.11s/it]      0/99     1.61Gtensor(0.11774, device='cuda:0')   0.01599         0    0.1454   0.01167        22       640:   0%|          | 1/2000 [00:03<1:43:34,  3.11s/it]      0/99     1.61Gtensor(0.11774, device='cuda:0')   0.01599         0    0.1454   0.01167        22       640:   0%|          | 2/2000 [00:03<46:33,  1.40s/it]        0/99     1.61Gtensor(0.10638, device='cuda:0')   0.01576         0    0.1336   0.01148        12       640:   0%|          | 2/2000 [00:03<46:33,  1.40s/it]      0/99     1.61Gtensor(0.09880, device='cuda:0')   0.01561         0    0.1258   0.01136        12       640:   0%|          | 2/2000 [00:03<46:33,  1.40s/it]      0/99     1.61Gtensor(0.09880, device='cuda:0')   0.01561         0    0.1258   0.01136        12       640:   0%|          | 3/2000 [00:03<27:59,  1.19it/s]      0/99     2.14Gtensor(0.10277, device='cuda:0')    0.0158         0    0.1299    0.0113        23       640:   0%|          | 3/2000 [00:03<27:59,  1.19it/s]      0/99     2.14Gtensor(0.10575, device='cuda:0')   0.01595         0     0.133   0.01126        23       640:   0%|          | 3/2000 [00:03<27:59,  1.19it/s]      0/99     2.14Gtensor(0.10575, device='cuda:0')   0.01595         0     0.133   0.01126        23       640:   0%|          | 4/2000 [00:03<19:26,  1.71it/s]      0/99     2.14Gtensor(0.10543, device='cuda:0')     0.016         0    0.1328   0.01137        26       640:   0%|          | 4/2000 [00:03<19:26,  1.71it/s]      0/99     2.14Gtensor(0.10516, device='cuda:0')   0.01605         0    0.1327   0.01146        26       640:   0%|          | 4/2000 [00:03<19:26,  1.71it/s]      0/99     2.14Gtensor(0.10516, device='cuda:0')   0.01605         0    0.1327   0.01146        26       640:   0%|          | 5/2000 [00:03<14:32,  2.29it/s]      0/99     2.14Gtensor(0.10539, device='cuda:0')   0.01618         0    0.1333   0.01175        33       640:   0%|          | 5/2000 [00:04<14:32,  2.29it/s]      0/99     2.14Gtensor(0.10558, device='cuda:0')   0.01629         0    0.1339     0.012        33       640:   0%|          | 5/2000 [00:04<14:32,  2.29it/s]      0/99     2.14Gtensor(0.10558, device='cuda:0')   0.01629         0    0.1339     0.012        33       640:   0%|          | 6/2000 [00:04<11:34,  2.87it/s]      0/99     2.14Gtensor(0.09702, device='cuda:0')   0.01607         0    0.1247    0.0116        15       640:   0%|          | 6/2000 [00:04<11:34,  2.87it/s]      0/99     2.14Gtensor(0.08968, device='cuda:0')   0.01588         0    0.1168   0.01126        15       640:   0%|          | 6/2000 [00:04<11:34,  2.87it/s]      0/99     2.14Gtensor(0.08968, device='cuda:0')   0.01588         0    0.1168   0.01126        15       640:   0%|          | 7/2000 [00:04<09:41,  3.43it/s]      0/99     2.14Gtensor(0.10076, device='cuda:0')   0.01581         0    0.1283    0.0117        30       640:   0%|          | 7/2000 [00:04<09:41,  3.43it/s]      0/99     2.14Gtensor(0.11046, device='cuda:0')   0.01575         0    0.1383   0.01209        30       640:   0%|          | 7/2000 [00:04<09:41,  3.43it/s]      0/99     2.14Gtensor(0.11046, device='cuda:0')   0.01575         0    0.1383   0.01209        30       640:   0%|          | 8/2000 [00:04<08:28,  3.91it/s]      0/99     2.14Gtensor(0.10297, device='cuda:0')   0.01569         0    0.1303   0.01169        16       640:   0%|          | 8/2000 [00:04<08:28,  3.91it/s]      0/99     2.14Gtensor(0.09632, device='cuda:0')   0.01564         0    0.1233   0.01133        16       640:   0%|          | 8/2000 [00:04<08:28,  3.91it/s]      0/99     2.14Gtensor(0.09632, device='cuda:0')   0.01564         0    0.1233   0.01133        16       640:   0%|          | 9/2000 [00:04<07:37,  4.35it/s]      0/99     2.14Gtensor(0.09678, device='cuda:0')   0.01564         0    0.1237   0.01125        46       640:   0%|          | 9/2000 [00:04<07:37,  4.35it/s]      0/99     2.14Gtensor(0.09720, device='cuda:0')   0.01565         0     0.124   0.01118        46       640:   0%|          | 9/2000 [00:04<07:37,  4.35it/s]      0/99     2.14Gtensor(0.09720, device='cuda:0')   0.01565         0     0.124   0.01118        46       640:   0%|          | 10/2000 [00:04<07:07,  4.66it/s]      0/99     2.14Gtensor(0.09736, device='cuda:0')   0.01561         0    0.1243   0.01138        30       640:   0%|          | 10/2000 [00:04<07:07,  4.66it/s]      0/99     2.14Gtensor(0.09749, device='cuda:0')   0.01557         0    0.1246   0.01156        30       640:   0%|          | 10/2000 [00:04<07:07,  4.66it/s]      0/99     2.14Gtensor(0.09749, device='cuda:0')   0.01557         0    0.1246   0.01156        30       640:   1%|          | 11/2000 [00:04<06:49,  4.86it/s]      0/99     2.14Gtensor(0.09234, device='cuda:0')   0.01546         0    0.1191   0.01127        13       640:   1%|          | 11/2000 [00:05<06:49,  4.86it/s]      0/99     2.14Gtensor(0.08762, device='cuda:0')   0.01536         0     0.114   0.01101        13       640:   1%|          | 11/2000 [00:05<06:49,  4.86it/s]      0/99     2.14Gtensor(0.08762, device='cuda:0')   0.01536         0     0.114   0.01101        13       640:   1%|          | 12/2000 [00:05<06:29,  5.11it/s]      0/99     2.14Gtensor(0.08891, device='cuda:0')   0.01533         0    0.1152     0.011        32       640:   1%|          | 12/2000 [00:05<06:29,  5.11it/s]      0/99     2.14Gtensor(0.09009, device='cuda:0')    0.0153         0    0.1164   0.01099        32       640:   1%|          | 12/2000 [00:05<06:29,  5.11it/s]      0/99     2.14Gtensor(0.09009, device='cuda:0')    0.0153         0    0.1164   0.01099        32       640:   1%|          | 13/2000 [00:05<06:18,  5.24it/s]      0/99     2.14Gtensor(0.08635, device='cuda:0')   0.01518         0    0.1123   0.01074        12       640:   1%|          | 13/2000 [00:05<06:18,  5.24it/s]      0/99     2.14Gtensor(0.08287, device='cuda:0')   0.01506         0    0.1084    0.0105        12       640:   1%|          | 13/2000 [00:05<06:18,  5.24it/s]      0/99     2.14Gtensor(0.08287, device='cuda:0')   0.01506         0    0.1084    0.0105        12       640:   1%|          | 14/2000 [00:05<06:07,  5.40it/s]      0/99     2.14Gtensor(0.08792, device='cuda:0')   0.01511         0    0.1137   0.01071        34       640:   1%|          | 14/2000 [00:05<06:07,  5.40it/s]      0/99     2.14Gtensor(0.09265, device='cuda:0')   0.01515         0    0.1187    0.0109        34       640:   1%|          | 14/2000 [00:05<06:07,  5.40it/s]      0/99     2.14Gtensor(0.09265, device='cuda:0')   0.01515         0    0.1187    0.0109        34       640:   1%|          | 15/2000 [00:05<06:02,  5.47it/s]      0/99     2.14Gtensor(0.09156, device='cuda:0')   0.01505         0    0.1175   0.01089         9       640:   1%|          | 15/2000 [00:05<06:02,  5.47it/s]      0/99     2.14Gtensor(0.09054, device='cuda:0')   0.01496         0    0.1164   0.01089         9       640:   1%|          | 15/2000 [00:05<06:02,  5.47it/s]      0/99     2.14Gtensor(0.09054, device='cuda:0')   0.01496         0    0.1164   0.01089         9       640:   1%|          | 16/2000 [00:05<05:55,  5.57it/s]      0/99     2.14Gtensor(0.09085, device='cuda:0')   0.01493         0    0.1167    0.0109        38       640:   1%|          | 16/2000 [00:05<05:55,  5.57it/s]      0/99     2.14Gtensor(0.09113, device='cuda:0')   0.01491         0     0.117   0.01092        38       640:   1%|          | 16/2000 [00:05<05:55,  5.57it/s]      0/99     2.14Gtensor(0.09113, device='cuda:0')   0.01491         0     0.117   0.01092        38       640:   1%|          | 17/2000 [00:05<05:55,  5.57it/s]      0/99     2.14Gtensor(0.09122, device='cuda:0')   0.01485         0     0.117   0.01089        16       640:   1%|          | 17/2000 [00:06<05:55,  5.57it/s]      0/99     2.14Gtensor(0.09131, device='cuda:0')    0.0148         0     0.117   0.01087        16       640:   1%|          | 17/2000 [00:06<05:55,  5.57it/s]      0/99     2.14Gtensor(0.09131, device='cuda:0')    0.0148         0     0.117   0.01087        16       640:   1%|          | 18/2000 [00:06<05:51,  5.65it/s]      0/99     2.14Gtensor(0.09239, device='cuda:0')   0.01476         0    0.1181   0.01094        45       640:   1%|          | 18/2000 [00:06<05:51,  5.65it/s]      0/99     2.14Gtensor(0.09342, device='cuda:0')   0.01472         0    0.1192   0.01101        45       640:   1%|          | 18/2000 [00:06<05:51,  5.65it/s]      0/99     2.14Gtensor(0.09342, device='cuda:0')   0.01472         0    0.1192   0.01101        45       640:   1%|          | 19/2000 [00:06<05:52,  5.62it/s]